<?php

declare(strict_types=1);

/*
 * CuadraAiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace CuadraAiLib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\QueryParam;
use Core\Request\Parameters\TemplateParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use CuadraAiLib\Exceptions\ErrorResponseException;
use CuadraAiLib\Http\ApiResponse;
use CuadraAiLib\Models\ModelEx;
use CuadraAiLib\Models\PaginatedResponseExListModelEx;

class ModelsController extends BaseController
{
    /**
     * This endpoint display all of our AI models.
     *
     * @param int|null $page
     * @param int|null $size
     *
     * @return ApiResponse Response from the API call
     */
    public function getModels(?int $page = null, ?int $size = null): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/model')
            ->auth('OAuth2')
            ->parameters(QueryParam::init('page', $page), QueryParam::init('size', $size));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(
                '400',
                ErrorType::init(
                    'Bad request, read again our documentation or contact support for guidance.',
                    ErrorResponseException::class
                )
            )
            ->throwErrorOn(
                '401',
                ErrorType::init('Not authorized, check our OAuth2 doc.', ErrorResponseException::class)
            )
            ->throwErrorOn(
                '500',
                ErrorType::init(
                    'Internal error, if this error persist, please contact support.',
                    ErrorResponseException::class
                )
            )
            ->type(PaginatedResponseExListModelEx::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * This endpoint creates a new custom Model for you to train and use.
     *
     * @param ModelEx $body
     *
     * @return ApiResponse Response from the API call
     */
    public function createModel(ModelEx $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/model')
            ->auth('OAuth2')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body)->required());

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(
                '400',
                ErrorType::init(
                    'Bad request, read again our documentation or contact support for guidance.',
                    ErrorResponseException::class
                )
            )
            ->throwErrorOn(
                '401',
                ErrorType::init('Not authorized, check our OAuth2 doc.', ErrorResponseException::class)
            )
            ->throwErrorOn(
                '500',
                ErrorType::init(
                    'Internal error, if this error persist, please contact support.',
                    ErrorResponseException::class
                )
            )
            ->type(ModelEx::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * This endpoint shows you information about a particular model given an id.
     *
     * @param string $id
     *
     * @return ApiResponse Response from the API call
     */
    public function getModel(string $id): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/model/{id}')
            ->auth('OAuth2')
            ->parameters(TemplateParam::init('id', $id)->required());

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(
                '400',
                ErrorType::init(
                    'Bad request, read again our documentation or contact support for guidance.',
                    ErrorResponseException::class
                )
            )
            ->throwErrorOn(
                '401',
                ErrorType::init('Not authorized, check our OAuth2 doc.', ErrorResponseException::class)
            )
            ->throwErrorOn(
                '500',
                ErrorType::init(
                    'Internal error, if this error persist, please contact support.',
                    ErrorResponseException::class
                )
            )
            ->type(ModelEx::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * This endpoint removes a custom model you created.
     *
     * @param string $id
     *
     * @return ApiResponse Response from the API call
     */
    public function removeModel(string $id): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::DELETE, '/model/{id}')
            ->auth('OAuth2')
            ->parameters(TemplateParam::init('id', $id)->required());

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(
                '400',
                ErrorType::init(
                    'Bad request, read again our documentation or contact support for guidance.',
                    ErrorResponseException::class
                )
            )
            ->throwErrorOn(
                '401',
                ErrorType::init('Not authorized, check our OAuth2 doc.', ErrorResponseException::class)
            )
            ->throwErrorOn(
                '500',
                ErrorType::init(
                    'Internal error, if this error persist, please contact support.',
                    ErrorResponseException::class
                )
            )
            ->type(ModelEx::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * This endpoint updates a custom model you created.
     *
     * @param string $id
     * @param ModelEx $body
     *
     * @return ApiResponse Response from the API call
     */
    public function updateModel(string $id, ModelEx $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::PATCH, '/model/{id}')
            ->auth('OAuth2')
            ->parameters(
                TemplateParam::init('id', $id)->required(),
                HeaderParam::init('Content-Type', 'application/json'),
                BodyParam::init($body)->required()
            );

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(
                '400',
                ErrorType::init(
                    'Bad request, read again our documentation or contact support for guidance.',
                    ErrorResponseException::class
                )
            )
            ->throwErrorOn(
                '401',
                ErrorType::init('Not authorized, check our OAuth2 doc.', ErrorResponseException::class)
            )
            ->throwErrorOn(
                '500',
                ErrorType::init(
                    'Internal error, if this error persist, please contact support.',
                    ErrorResponseException::class
                )
            )
            ->type(ModelEx::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
