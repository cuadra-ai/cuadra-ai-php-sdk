<?php

declare(strict_types=1);

/*
 * CuadraAiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace CuadraAiLib\Models;

use CuadraAiLib\ApiHelper;
use stdClass;

class ChatResponseEx implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $output;

    /**
     * @var float|null
     */
    private $confidenceScore;

    /**
     * @var string|null
     */
    private $model;

    /**
     * @var UsageEx|null
     */
    private $usage;

    /**
     * Returns Output.
     * Output generated by the AI to resolve the request
     */
    public function getOutput(): ?string
    {
        return $this->output;
    }

    /**
     * Sets Output.
     * Output generated by the AI to resolve the request
     *
     * @maps output
     */
    public function setOutput(?string $output): void
    {
        $this->output = $output;
    }

    /**
     * Returns Confidence Score.
     * Confidence score of how accurate is the output regarding your request
     */
    public function getConfidenceScore(): ?float
    {
        return $this->confidenceScore;
    }

    /**
     * Sets Confidence Score.
     * Confidence score of how accurate is the output regarding your request
     *
     * @maps confidenceScore
     */
    public function setConfidenceScore(?float $confidenceScore): void
    {
        $this->confidenceScore = $confidenceScore;
    }

    /**
     * Returns Model.
     * Model used to resolve your query
     */
    public function getModel(): ?string
    {
        return $this->model;
    }

    /**
     * Sets Model.
     * Model used to resolve your query
     *
     * @maps model
     */
    public function setModel(?string $model): void
    {
        $this->model = $model;
    }

    /**
     * Returns Usage.
     * This is the token usage result of your request
     */
    public function getUsage(): ?UsageEx
    {
        return $this->usage;
    }

    /**
     * Sets Usage.
     * This is the token usage result of your request
     *
     * @maps usage
     */
    public function setUsage(?UsageEx $usage): void
    {
        $this->usage = $usage;
    }

    /**
     * Converts the ChatResponseEx object to a human-readable string representation.
     *
     * @return string The string representation of the ChatResponseEx object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ChatResponseEx',
            [
                'output' => $this->output,
                'confidenceScore' => $this->confidenceScore,
                'model' => $this->model,
                'usage' => $this->usage,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['output', 'confidenceScore', 'model', 'usage'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->output)) {
            $json['output']          = $this->output;
        }
        if (isset($this->confidenceScore)) {
            $json['confidenceScore'] = $this->confidenceScore;
        }
        if (isset($this->model)) {
            $json['model']           = $this->model;
        }
        if (isset($this->usage)) {
            $json['usage']           = $this->usage;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
